name: Build Natives

on:
  push:
    branches:
      - SDL3

jobs:
  build-windows:
    runs-on: ubuntu-latest
    name: Build Windows Natives

    strategy:
      fail-fast: false
      matrix:
        include: [
          { toolchain: mingw64-x86_64, name: "windows-x86_64" },
          { toolchain: mingw64-i686, name: "windows-x86" }
        ]

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: temurin
      - uses: BrycensRanch/read-properties-action@v1
        id: read-properties
        with:
          file: gradle.properties
          property: sdlCommit
      - name: Clone SDL3
        run: |
          git clone https://github.com/libsdl-org/SDL.git --branch main --single-branch SDL
          cd SDL
          git reset --hard ${{ steps.read-properties.outputs.sdlCommit }}
      - name: Get build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install ant mingw-w64 upx cmake
      - name: Build SDL3
        working-directory: SDL
        run: |
          cmake -S . -B build -DCMAKE_TOOLCHAIN_FILE=build-scripts/cmake-toolchain-${{ matrix.toolchain }}.cmake -DCMAKE_BUILD_TYPE=Release
          cmake --build build --config Release
      - name: Compress SDL3.dll
        run: |
          upx -5 SDL/build/SDL3.dll
      - name: Add SDL3.dll to folder
        run: |
          mkdir -p libs/natives/${{ matrix.name }}
          cp SDL/build/SDL3.dll libs/natives/${{ matrix.name }}/SDL3.dll
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: natives-${{ matrix.name }}
          path: libs/natives/**
  build-linux:
    runs-on: ubuntu-latest
    name: Build Linux Natives

    strategy:
      fail-fast: false
      matrix:
        include: [
          # Running on x86_64 runner, nothing extra needed
          { name: "linux-x86_64", packages: "", cmakeargs: "" },
          # Running on aarch64 runner, need to install gcc-aarch64-linux-gnu toolchain
          { name: "linux-aarch64", packages: "gcc-aarch64-linux-gnu", cmakeargs: "-DCMAKE_C_COMPILER=aarch64-linux-gnu-gcc -DCMAKE_CXX_COMPILER=aarch64-linux-gnu-g++" },
        ]

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: temurin
      - uses: BrycensRanch/read-properties-action@v1
        id: read-properties
        with:
          file: gradle.properties
          property: sdlCommit
      - name: Clone SDL3
        run: |
          git clone https://github.com/libsdl-org/SDL.git --branch main --single-branch SDL
          cd SDL
          git reset --hard ${{ steps.read-properties.outputs.sdlCommit }}
      - name: Get build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install ant build-essential cmake libudev-dev libpulse-dev libpipewire-0.3-dev ${{ matrix.packages }}
      - name: Build SDL3 for linux64
        working-directory: SDL
        run: |
          cmake -S . -B build -DCMAKE_BUILD_TYPE=Release ${{ matrix.cmakeargs }}
          cmake --build build --config Release
      - name: Add SDL3.so to folder
        run: |
          mkdir -p libs/natives/${{ matrix.name }}
          cp SDL/build/libSDL3.so libs/natives/${{ matrix.name }}/SDL3.so
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: natives-${{ matrix.name }}
          path: libs/natives/**

  build-macos:
    runs-on: macos-latest
    name: Build MacOS Natives

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: temurin
      - uses: BrycensRanch/read-properties-action@v1
        id: read-properties
        with:
          file: gradle.properties
          property: sdlCommit
      - name: Clone SDL3
        run: |
          git clone https://github.com/libsdl-org/SDL.git --branch main --single-branch SDL
          cd SDL
          git reset --hard ${{ steps.read-properties.outputs.sdlCommit }}
      - name: Get build dependencies
        run: |
          brew install ant cmake
      - name: Build SDL3 for mac64
        working-directory: SDL
        run: |
          cmake -S . -B build -DCMAKE_BUILD_TYPE=Release
          cmake --build build --config Release
        env:
          CMAKE_OSX_ARCHITECTURES: 'arm64;x86_64'
      - name: Add SDL3.dylib to folder
        run: |
          mkdir -p libs/natives/macos-universal
          cp SDL/build/libSDL3.dylib libs/natives/macos-universal/SDL3.dylib
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: natives-macos-universal
          path: libs/natives/**

  publish:
    runs-on: ubuntu-latest
    name: Publish Library
    needs: [build-windows, build-linux, build-macos]

    steps:
      - uses: actions/checkout@v4
      - name: Download built natives
        uses: actions/download-artifact@v4
        with:
          pattern: natives-*
          merge-multiple: true
          path: libs/natives
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: temurin
      - name: Publish to Maven
        run: |
          chmod +x gradlew
          ./gradlew build publishAllPublicationsToXanderReleasesRepository -x test
        env:
          XANDER_MAVEN_USER: xander
          XANDER_MAVEN_PASS: ${{ secrets.XANDER_MAVEN_PASS }}
          LD_LIBRARY_PATH: ${{ github.workspace }}/libs/natives/linux64
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: java-library
          path: build/libs/*.jar
